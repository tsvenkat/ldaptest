#!/bin/bash

if [[ "$(whoami)" != "root" ]]; then
  echo "must run as root"
  exit 1
fi

# install sssd
export DEBIAN_FRONTEND=noninteractive
# sssd-tools includes the sss_cache tool that can be used to clear the cache
# sss_cache -E
apt-get update && apt install ldap-utils sssd libpam-sss libnss-sss sssd-tools -y

# copy the cacert generated by the openldap.sh script to the correct location
cp /vagrant/generated/ca.cert.pem /usr/local/share/ca-certificates/ca.crt
update-ca-certificates
# if the update needs to be run later and if it didn't work correctly, use the following flag
#  update-ca-certificates --fresh

# setup the sssd config file
mkdir -p /etc/sssd
cp /vagrant/resources/sssd.conf /etc/sssd/
chmod -R 600 /etc/sssd/sssd.conf
chown root:root /etc/sssd/sssd.conf
pam-auth-update --enable mkhomedir

# start the sss daemon
systemctl enable sssd.service
systemctl start sssd.service

# Update the /etc/ssh/sshd_config file to enable password authentication
# Note: need to switch this with key based auth instead. We use password based as LDAP is setup like that
sed -i "/^[^#]*PasswordAuthentication[[:space:]]no/c\PasswordAuthentication yes" /etc/ssh/sshd_config
echo 'AuthorizedKeysCommand /usr/bin/sss_ssh_authorizedkeys'  >> /etc/ssh/sshd_config
echo -n 'AuthorizedKeysCommandUser nobody' >> /etc/ssh/sshd_config
systemctl restart sshd

# copy script to auto generate ssh files for user to move around in the cluster
# TODO: enable slurm pam adopt plugin
cp /vagrant/resources/ssh-oscar.sh /etc/profile.d/

# sssd troubleshooting tips:
# sometimes it is helpful to run sssd in the foreground with debug logging enabled
# first,
#  systemctl stop sssd.service
#  sudo sssd -d 3 -i -c /etc/sssd/sssd.conf
# That should run sssd in the foreground
# From another terminal, can issue commands such as following to see what ldap calls sssd generates
#  getent passwd Robert
#  getent -s sss passwd Robert
#  getent group Theon
#  groups Theon
#  getent -s sss group Theon
# Note: If caching is enabled, sssd will not call the ldap server if above calls are repeated.
# To manually flush the cache, run the following:
#  sss_cache -E
# To kill the foreground sssd, just do a ctrl+c
# Note: In some terminals (specially if running in Windows hosts with git bash), ctrl+c may not work
# In those cases, run the following from another terminal (command starts with the keyword sudo),
#  vagrant@slurmctld:~$ sudo kill -2 `pgrep -x sssd`
# Here "-2" means SIGINT(ctrl+c) and "-x" means eXact match process name

# Sample ldap client commands:
# Check if the connection to the ldapserver works
#   ldapwhoami -x -H ldap://ldapserver -ZZ
# Here, "-x" stands for simple authentication and "-ZZ" means we want the client to start TLS and 
# the second Z means it must succeed
# The same can be explicitly specified with ldaps as well:
#  ldapwhoami -x -H ldaps://ldapserver
# The above two commands should return "anonymous". If you want to test using the creds of a specific
# user, can specify the following instead:
#  ldapwhoami -x -H ldaps://ldapserver -D "uid=Robert,ou=People,dc=KingsLanding, dc=Westeros, dc=com" -W
# the "-W" would prompt the user for password. If you want to specify the password with the command,
#  ldapwhoami -x -H ldaps://ldapserver -D "uid=Robert,ou=People,dc=KingsLanding, dc=Westeros, dc=com" -w Robert123
# To query all user/group entries from the ldap server
#  ldapsearch -x -b "dc=Kingslanding, dc=Westeros, dc=com" -D "cn=ldapadm, dc=Kingslanding, dc=Westeros, dc=com" -H ldap://ldapserver -w WinterIsComing  "*" -LLL
# Here,
#  -b is the based dn from where the search should start in the LDAP directory information tree (DIT)
#  -D is the dn of the service account that can be used to bind to make this query
#  -w is the password corresponding to the service account
#  "*" means get all resources without filtering them
#  -L reduces the verbosity of the output. Adding more L's will remove comments from the output - useful when the results are parsed by a script
#
# To modify resources in a LDAP tree (note: use caution as this can break things if not done correctly!)
#    ldapmodify -Y EXTERNAL -H ldapi:// -f tls7.ldif
# Here the tls7.ldif file is as follows and ldapi:// referts to running this command from the ldapserver node
# [root@ldapserver CA]# cat tls7.ldif
# dn: cn=config
# changetype: modify
# replace: olcTLSCertificateFile
# olcTLSCertificateFile: /etc/openldap/certs/ldapserver.crt
# -
# replace: olcTLSCertificateKeyFile
# olcTLSCertificateKeyFile: /etc/openldap/certs/ldapserver.key
# -
# replace: olcTLSCACertificatePath
# olcTLSCACertificatePath: /etc/openldap/cacerts

